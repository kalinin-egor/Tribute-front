name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: package-lock.json
        
    - name: Install dependencies
      run: npm ci
      
    - name: Type check
      run: npm run type-check
      
    - name: Build application
      run: npm run build
      
    - name: Build verification
      run: |
        if [ -d "dist" ]; then
          echo "✅ Build successful! Dist directory created."
          echo "📁 Build contents:"
          ls -la dist/
        else
          echo "❌ Build failed! Dist directory not found."
          exit 1
        fi
      
    - name: Deploy to VPS
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.GIT_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        debug: true
        script: |
          set -e
          echo "🔐 SSH Authentication successful!"
          echo "Starting deployment process..."
          echo "Current directory: $(pwd)"
          echo "User: $(whoami)"
          
          # Set repository path with fallback
          REPO_PATH="${VPS_PEROSITORY_PATH:-/home/$USER/Tribute}"
          echo "Using repository path: $REPO_PATH"
          
          # Navigate to repository directory
          if [ -d "$REPO_PATH" ]; then
            cd "$REPO_PATH"
            echo "Repository directory: $(pwd)"
          else
            echo "❌ Repository directory not found: $REPO_PATH"
            echo "Available directories:"
            ls -la /home/$USER/
            exit 1
          fi
          
          # Pull latest changes
          echo "📥 Pulling latest changes..."
          git pull origin main
          
          # Navigate to frontend directory
          if [ -d "Tribute-front" ]; then
            cd Tribute-front
            echo "Frontend directory: $(pwd)"
            ls -la
          else
            echo "❌ Tribute-front directory not found!"
            echo "Available directories:"
            ls -la
            exit 1
          fi
          
          echo "📦 Installing dependencies..."
          npm ci
          
          echo "🔨 Building application..."
          npm run build
          
          echo "✅ Build verification..."
          if [ -d "dist" ]; then
            echo "✅ Build successful! Dist directory created."
            echo "📁 Build contents:"
            ls -la dist/
          else
            echo "❌ Build failed! Dist directory not found."
            exit 1
          fi
          
          echo "🚀 Starting application..."
          # Stop any existing process
          pkill -f "npm.*start" || true
          pkill -f "node.*dist" || true
          
          # Start the application in background
          nohup npm start > app.log 2>&1 &
          
          echo "⏳ Waiting for application to start..."
          sleep 5
          
          # Check if application is running
          if pgrep -f "npm.*start" > /dev/null; then
            echo "✅ Application started successfully!"
            echo "📋 Application logs:"
            tail -n 10 app.log
          else
            echo "❌ Application failed to start!"
            echo "📋 Error logs:"
            cat app.log
            exit 1
          fi
          
          echo "Frontend deployment completed successfully!"
        port: 22
        timeout: 30s
        command_timeout: 10m
        proxy_port: 22
        proxy_timeout: 30s 
